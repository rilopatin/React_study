{"version":3,"sources":["components/errorMessage/error.jpg","components/header/header.js","components/header/index.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/itemList.js","components/itemList/index.js","components/charDetails/charDetails.js","components/charDetails/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","__webpack_require__","p","HeaderBlock","styled","div","_templateObject","HeaderTitle","h3","_templateObject2","HeaderLinks","ul","_templateObject3","Header","react_default","a","createElement","href","fetch","require","GotService","Object","classCallCheck","this","_apiBase","url","res","ok","Error","concat","status","json","getResource","map","_transformCharacter","id","character","console","log","culture","char","name","length","gender","born","died","house","region","words","titles","overlord","ancestralWeapons","book","numberOfPages","publiser","released","Spinner","className","ErrorMessage","Fragment","src","img","alt","RandomBlock","randomChar_templateObject","Term","span","randomChar_templateObject2","RandomChar","randomChar_templateObject3","gotService","state","loading","error","onCharLoaded","_this","setState","onError","err","updateChar","Math","floor","random","getCharacter","then","catch","timerId","setInterval","clearInterval","_this$state","errorMessage","components_errorMessage","spinner","components_spinner","content","randomChar_View","Component","View","_ref","ItemListBlock","itemList_templateObject","ItemList","charList","_this2","getAllCharacters","arr","_this3","item","i","key","onClick","props","onCharSelected","items","renderItems","CharDetailsBlock","charDetails_templateObject","CharDetails","prevProps","charId","foo","bar","_this$state$char","App","showRandomChar","buttonText","selectedChar","toggleRandomChar","randomChar","Container","components_header","Row","Col","lg","size","offset","Button","block","md","itemList","charDetails","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.232113e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.6afe35eb.jpg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 80px;\n`;\n\nconst HeaderTitle = styled.h3`\n    font-size: 24px;\n    color: #fff;\n    margin: 0;\n`;\n\nconst HeaderLinks = styled.ul`\n    display: flex;\n    margin: 0;\n    align-items: center;\n    color: #fff;\n    list-style-type: none;\n    li {\n        margin-right: 20px;\n        font-size: 18px;\n    }\n`;\n\nconst Header = () => {\n    return (\n        <HeaderBlock>\n            <HeaderTitle>\n                <a href=\"#\">\n                Game of Thrones DB\n                </a>\n            </HeaderTitle>\n            <HeaderLinks>\n                <li>\n                    <a href=\"#\">Characters</a>\n                </li>\n                <li>\n                    <a href=\"#\">Houses</a>\n                </li>\n                <li>\n                    <a href=\"#\">Books</a>   \n                </li>\n            </HeaderLinks>\n        </HeaderBlock>\n    );\n};\n\nexport default Header;","import Header from './header';\n\nexport default Header;","const fetch = require('isomorphic-fetch')\r\n\r\nexport default class GotService {\r\n    constructor() {\r\n        this._apiBase = ''\r\n    }\r\n    async getResource(url) {\r\n        const res = await fetch(url)\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n        }\r\n        return await res.json()\r\n    }\r\n    async getAllCharacters() {\r\n        const res = await this.getResource('https://www.anapioficeandfire.com/api/characters?page=5&pageSize=10')\r\n        return res.map(this._transformCharacter)\r\n    }\r\n    async getCharacter(id) {\r\n        const character = await this.getResource(`https://www.anapioficeandfire.com/api/characters/${id}`)\r\n        console.log(character.culture)\r\n        return this._transformCharacter(character)\r\n\r\n    }\r\n    getAllBooks(){\r\n        return this.getResource(`/books/`)\r\n    }\r\n    getBook(id) {\r\n        return this.getResource(`/books/${id}/`)\r\n    }\r\n    _transformCharacter(char){\r\n        return {\r\n            name: (char.name.length !== 0) ? char.name : 'unknown',\r\n            gender: (char.gender.length !== 0) ? char.gender : 'unknown',\r\n            born: (char.born.length !== 0) ? char.born : 'unknown',\r\n            died: (char.died.length !== 0) ? char.died : 'unknown',\r\n            culture: (char.culture.length !== 0) ? char.culture : 'unknown'\r\n        }\r\n    }\r\n    _transformHouse(house) {\r\n        return{\r\n            name: house.name,\r\n            region: house.region,\r\n            words: house.words,\r\n            titles: house.titles,\r\n            overlord: house.overlord,\r\n            ancestralWeapons: house.ancestralWeapons\r\n        }\r\n    }\r\n    _transformBook(book) {\r\n        return {\r\n           name: book.name,\r\n           numberOfPages: book.numberOfPages,\r\n           publiser: book.publiser,\r\n           released: book.released\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import Spinner from './spinner.js'\r\n\r\nexport default Spinner","import React from 'react'\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"lds-css ng-scope\">\r\n            <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import ErrorMessage from './errorMessage.js'\r\n\r\nexport default ErrorMessage","import React from 'react'\r\n\r\nimport img from './error.jpg'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <>\r\n            <img src={img} alt=\"error\"></img>\r\n            <span>Something goes wrong</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage\r\n\r\n//<img src={process.env.PUBLIC_URL + '/img/error.jpg'} alt=\"error\"></img>","import React, { Component } from 'react';\nimport gotService from '../../services/gotService'\nimport Spinner from '../spinner'\nimport ErrorMessage from '../errorMessage'\n\nimport styled from 'styled-components'\n\nconst RandomBlock = styled.div`\n    background-color: #fff;\n    padding: 25px 25px 15px 25px;\n    h4 {\n    margin-bottom: 20px;\n    text-align: center;\n    }\n    img {\n    width: 100%;\n    } \n`\nconst Term = styled.span`\n    font-weight: bold;\n`\nconst RandomBlockWrap = styled.div`\n    margin-bottom: 40px;\n`\n\n\nexport default class RandomChar extends Component {\n\n    gotService = new gotService()\n\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n\n    componentDidMount() {\n        this.updateChar()\n        //refresh data every 1,5 sec\n        this.timerId = setInterval(this.updateChar, 1500)\n    }\n\n    componentWillUnmount () {\n        console.log('unmounting')\n        clearInterval(this.timerId)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({char, loading: false})\n    }\n\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n\n    updateChar = () => {\n        console.log('update')\n        const id = Math.floor(Math.random() * 140 + 25)\n        //const id = 5000000000\n        this.gotService.getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    render() {\n        console.log('render')\n\n        const {char, loading, error } = this.state\n\n        const errorMessage = error ? <ErrorMessage/> : null\n        const spinner = loading ? <Spinner/> : null\n        const content = !(loading || error) ? <View char={char}/> : null\n\n        return (\n\n                <RandomBlock  className=\"rounded\">\n                    {errorMessage}\n                    {spinner}\n                    {content}\n                </RandomBlock>\n\n\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, gender, born, died, culture} = char\n    return (\n        <>\n            <h4>Random Character: {name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <Term>Gender </Term>\n                    <span>{gender}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <Term>Born </Term>\n                    <span>{born}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <Term>Died </Term>\n                    <span>{died}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <Term>Culture </Term>\n                    <span>{culture}</span>\n                </li>\n            </ul>\n        </>\n    )\n}\n","import RandomChar from './randomChar';\n\nexport default RandomChar;","import React, {Component} from 'react';\n//import './itemList.css';\nimport gotService from '../../services/gotService'\nimport Spinner from '../spinner'\nimport ErrorMessage from '../errorMessage'\n\nimport styled from 'styled-components'\n\nconst ItemListBlock = styled.ul`\n    cursor: pointer;\n`\n\nexport default class ItemList extends Component {\n\n    gotService = new gotService()\n\n    state = {\n        charList: null\n    }\n\n    componentDidMount() {\n        this.gotService.getAllCharacters()\n            .then((charList) => {\n                this.setState({\n                    charList\n                })\n            })\n    }\n\n    renderItems(arr) {\n        return arr.map((item, i) => {\n            return (\n                <li\n                    key={i}\n                    className=\"list-group-item\"\n                    onClick={() => this.props.onCharSelected(41 + i)}>\n                    {item.name}\n                </li>\n            )\n        })\n    }\n\n    render() {\n\n        const {charList} = this.state\n\n        if(!charList) {\n            return <Spinner/>\n        }\n\n        const items = this.renderItems(charList)\n\n        return (\n            <ItemListBlock className=\"item-list list-group\">\n                {items}\n            </ItemListBlock>\n        );\n    }\n}","import ItemList from './itemList';\n\nexport default ItemList;","import React, {Component} from 'react';\n//import './charDetails.css';\nimport gotService from '../../services/gotService'\nimport styled from 'styled-components'\n\nconst CharDetailsBlock = styled.div`\n    background-color: #fff;\n    padding: 25px 25px 15px 25px;\n    margin-bottom: 40px;\n    h4 {\n    height: 50px;\n    margin-bottom: 20px;\n    text-align: center;\n    }\n`\nexport default class CharDetails extends Component {\n\n    gotService = new gotService()\n\n    state = {\n        char: null\n    }\n\n    componentDidMount() {\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps) {\n       if(this.props.charId !== prevProps.charId) {\n           this.updateChar()\n       }\n    }\n\n    updateChar() {\n        const {charId} = this.props\n        if(!charId) {\n            return\n        }\n        this.gotService.getCharacter(charId)\n            .then((char) => {\n                this.setState({char})\n            })\n        this.foo.bar = 0\n    }\n\n\n\n    render() {\n\n        if(!this.state.char) {\n            return <span className='select-error text-white'>Please select a character</span>\n        }\n\n        const {name, gender, born, died, culture} = this.state.char\n\n        return (\n            <CharDetailsBlock className=\"rounded\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender</span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born</span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died</span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture</span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n            </CharDetailsBlock>\n        );\n    }\n}","import CharDetails from './charDetails';\nexport default CharDetails;","import App from './app';\n\nexport default App;\n","import React, { Component } from 'react';\nimport {Col, Row, Container, Button} from 'reactstrap';\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport ItemList from '../itemList';\nimport CharDetails from '../charDetails';\n\nexport default class App extends Component {\n\n    state = {\n        showRandomChar: true,\n        buttonText: 'HIDE',\n        selectedChar: 130\n    }\n\n    toggleRandomChar = () => {\n        this.setState((state) => {\n            return {\n                showRandomChar: !state.showRandomChar,\n                buttonText: this.state.buttonText === 'HIDE' ? 'SHOW' : 'HIDE'\n            }\n        })\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        const char = this.state.showRandomChar ? <RandomChar/> : null\n\n        return (\n            <>\n                <Container>\n                    <Header />\n                </Container>\n                <Container>\n                    <Row>\n                        <Col lg={{size: 5, offset: 0}}>\n                            {char}\n                            <Button className=\"mt-3 mb-3\" size=\"lg\" block\n                                    onClick={this.toggleRandomChar}>\n                                {this.state.buttonText}</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md='6'>\n                            <ItemList onCharSelected={this.onCharSelected}/>\n                        </Col>\n                        <Col md='6'>\n                            <CharDetails charId={this.state.selectedChar}/>\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        );\n    }\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}